version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: ayrshare-app-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    env_file:
      - .env.production
    networks:
      - ayrshare-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
          cpus: "0.25"

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: ayrshare-redis-prod
  #   restart: unless-stopped
  #   networks:
  #     - ayrshare-network
  #   volumes:
  #     - redis_data:/data
  #   command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Optional: Add Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: ayrshare-nginx-prod
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   networks:
  #     - ayrshare-network
  #   depends_on:
  #     - app
  #   healthcheck:
  #     test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

networks:
  ayrshare-network:
    driver: bridge
# volumes:
#   redis_data:
